# Generated by Django 5.1.2 on 2024-12-12 11:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='GoldmineCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('abbreviation', models.CharField(max_length=8)),
                ('description', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(default='name', max_length=64)),
                ('last_name', models.CharField(default='lastname', max_length=64)),
                ('username', models.CharField(default='username', max_length=32)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ['email'],
            },
        ),
        migrations.CreateModel(
            name='VinylRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release_code', models.CharField(max_length=128)),
                ('artist', models.CharField(max_length=128)),
                ('album_name', models.CharField(max_length=128)),
                ('release_year', models.IntegerField()),
                ('genre', models.CharField(max_length=64)),
                ('location', models.JSONField()),
                ('available_for_exchange', models.BooleanField()),
                ('additional_description', models.CharField(max_length=256)),
                ('cover_condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cover_condition', to='api.goldminecondition')),
                ('record_condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='record_condition', to='api.goldminecondition')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Photograph',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('binary_content', models.BinaryField()),
                ('vinyl_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.vinylrecord')),
            ],
        ),
    ]
